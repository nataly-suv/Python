import logging
import random

from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, Filters

reply_keyboard = [['/play', '/info', '/close']]
stop_keyboard = [['/stop']]

markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False)
stop_markup = ReplyKeyboardMarkup(stop_keyboard, one_time_keyboard=False)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)

TOKEN = '5580181060:AAGFiCzczf7PDKayIT4umVjhg3ZecIjq4Pk'

candy = 0
def start(update, context):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å!",
        reply_markup=markup
    )

def play(update, context):
    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –≤ –∏–≥—Ä–µ', reply_markup=stop_markup)
    return 1

def play_get_candy(update, context):
    global candy
    candy = int(update.message.text)
    update.message.reply_text('–°–∫–æ–ª—å–∫–æ –∫–æ—Ñ–µ–Ω—Ç –≤—ã –≤–æ–∑—å–º–µ—Ç–µ?')
    return 2

def player_1(update, context):
    global candy
    try:
        candy -= int(update.message.text)
        update.message.reply_text(f'–ö–æ–Ω—Ñ–µ—Ç –æ—Å—Ç–∞–ª–æ—Å—å: {candy}')
        if candy>28:
            temp = random.randint(1,28)
            candy -= temp
            update.message.reply_text(f'–ë–æ—Ç –≤–∑—è–ª {temp} –∫–æ–Ω—Ñ–µ—Ç. –ö–æ–Ω—Ñ–µ—Ç –æ—Å—Ç–∞–ª–æ—Å—å: {candy}')
            if candy>28:
                update.message.reply_text('–°–∫–æ–ª—å–∫–æ –∫–æ—Ñ–µ–Ω—Ç –≤—ã –≤–æ–∑—å–º–µ—Ç–µ?')
            else:
                update.message.reply_text(f'–í—ã –ø–æ–±–µ–¥–∏–ª–∏ ü¶û', reply_markup=markup)
                context.bot.send_document(chat_id=update.effective_chat.id, document='https://liubavyshka.ru/_ph/80/2/868450491.gif?1667846726')
                return ConversationHandler.END
            return 2
        else:
            update.message.reply_text('–ü–æ–±–µ–¥–∏–ª –±–æ—Ç', reply_markup=markup)
            return ConversationHandler.END
    except ValueError:
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
        return 2

def stop(update, context):
    update.message.reply_text("–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!", reply_markup=markup)
    return ConversationHandler.END

def info(update, context):
    update.message.reply_text(
        "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")

def close(update, context):
    update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!",
    reply_markup=ReplyKeyboardRemove())


play_handler = ConversationHandler(
        entry_points=[CommandHandler('play', play)],

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞.
        states={
            1: [MessageHandler(Filters.text & ~Filters.command, play_get_candy)],
            2: [MessageHandler(Filters.text & ~Filters.command, player_1)],
        },

        # –¢–æ—á–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /stop.
        fallbacks=[CommandHandler('stop', stop)]
    )


def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher
    dp.add_handler(play_handler)
    dp.add_handler(CommandHandler("info", info))
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("close", close))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()